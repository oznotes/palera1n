name: Build palera1n Windows x64

on:
  push:
    paths:
      - 'src/**'
      - 'docs/**'
      - 'patches/**'
      - 'include/**'
      - 'Makefile'
      - 'CMakeLists.txt'
      - '.github/workflows/build-windows.yml'
  pull_request:
    paths:
      - 'src/**'
      - 'docs/**'
      - 'patches/**'
      - 'include/**'
      - 'Makefile'
      - 'CMakeLists.txt'
      - '.github/workflows/build-windows.yml'
  workflow_dispatch:

jobs:
  build-windows-x64:
    runs-on: windows-latest
    env:
      MBEDTLS_VERSION: 3.5.2
      LIBUSB_VERSION: 1.0.27
      LIBIMOBILEDEVICE_COMMIT: ed0d66d0341562731bb19928dfe48155509fa7a7
      LIBIRECOVERY_COMMIT: 7ce02c347b7c26e59498e6af31c9da51018d0fa1
      LIBIMOBILEDEVICE_GLUE_COMMIT: 362f7848ac89b74d9dd113b38b51ecb601f76094
      LIBPLIST_COMMIT: 2117b8fdb6b4096455bd2041a63e59a028120136
      LIBUSBMUXD_COMMIT: a7f0543fb1ecb20ac7121c0fd77297200e0e43fc

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-autotools
            mingw-w64-x86_64-libusb
            git
            make

      - name: Setup environment
        shell: msys2 {0}
        run: |
          echo "CHECKRA1N_NAME=windows-x64" >> $GITHUB_ENV
          echo "ARCH_NAME=x64" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=/mingw64/lib/pkgconfig" >> $GITHUB_ENV
          echo "CFLAGS=-I/mingw64/include -L/mingw64/lib" >> $GITHUB_ENV
          echo "CXXFLAGS=-I/mingw64/include -L/mingw64/lib" >> $GITHUB_ENV
          echo "LDFLAGS=-L/mingw64/lib" >> $GITHUB_ENV
          echo "DESTDIR=$(pwd)/sysroot" >> $GITHUB_ENV
          echo "PREFIX=/mingw64" >> $GITHUB_ENV
          echo "CONFIGURE_ARGS=--prefix=/mingw64 --disable-shared --enable-static" >> $GITHUB_ENV

      - name: Download dependencies (source code)
        shell: msys2 {0}
        run: |
          curl -LO https://github.com/Mbed-TLS/mbedtls/archive/refs/tags/v${{ env.MBEDTLS_VERSION }}.tar.gz
          tar -xzf v${{ env.MBEDTLS_VERSION }}.tar.gz
          git clone --depth=1 https://github.com/libimobiledevice/libplist
          git clone --depth=1 https://github.com/libimobiledevice/libimobiledevice-glue
          git clone --depth=1 https://github.com/libimobiledevice/libirecovery
          git clone --depth=1 https://github.com/libimobiledevice/libusbmuxd
          git clone --depth=1 https://github.com/libimobiledevice/libimobiledevice

      - name: Build Mbed TLS
        shell: msys2 {0}
        run: |
          cd mbedtls-${{ env.MBEDTLS_VERSION }}
          mkdir build && cd build
          cmake .. -G Ninja -DCMAKE_INSTALL_PREFIX=${{ env.PREFIX }} -DENABLE_PROGRAMS=OFF -DENABLE_TESTING=OFF
          ninja
          ninja install
          cd ../..

      - name: Build libplist
        shell: msys2 {0}
        run: |
          cd libplist
          ./autogen.sh
          ./configure ${{ env.CONFIGURE_ARGS }} --without-cython
          make -j$(nproc)
          make install
          cd ..

      - name: Build libimobiledevice-glue
        shell: msys2 {0}
        run: |
          cd libimobiledevice-glue
          ./autogen.sh
          ./configure ${{ env.CONFIGURE_ARGS }}
          make -j$(nproc)
          make install
          cd ..

      - name: Build libirecovery
        shell: msys2 {0}
        run: |
          cd libirecovery
          ./autogen.sh
          ./configure ${{ env.CONFIGURE_ARGS }}
          make -j$(nproc)
          make install
          cd ..

      - name: Build libusbmuxd
        shell: msys2 {0}
        run: |
          cd libusbmuxd
          ./autogen.sh
          ./configure ${{ env.CONFIGURE_ARGS }}
          make -j$(nproc)
          make install
          cd ..

      - name: Build libimobiledevice
        shell: msys2 {0}
        run: |
          cd libimobiledevice
          ./autogen.sh
          ./configure ${{ env.CONFIGURE_ARGS }} --with-mbedtls --disable-debug --disable-wireless-pairing
          make -j$(nproc)
          make install
          cd ..

      - name: Build palera1n
        shell: msys2 {0}
        run: |
          make -j$(nproc) ROOTFUL=1
          cp src/palera1n.exe palera1n.release.exe

      - name: Build palera1n (Development)
        shell: msys2 {0}
        run: |
          make clean
          make -j$(nproc) DEV_BUILD=1 ROOTFUL=1
          cp src/palera1n.exe palera1n.development.exe

      - name: Prepare artifact
        shell: msys2 {0}
        run: |
          mkdir -p ready/{binaries,binaries_development}
          mv palera1n.release.exe ready/binaries/palera1n-${{ env.CHECKRA1N_NAME }}.exe
          mv palera1n.development.exe ready/binaries_development/palera1n-${{ env.CHECKRA1N_NAME }}.development.exe

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: palera1n-windows-x64
          path: |
            ready/binaries/palera1n-${{ env.CHECKRA1N_NAME }}.exe
            ready/binaries_development/palera1n-${{ env.CHECKRA1N_NAME }}.development.exe
          retention-days: 90