name: Build palera1n for Linux x86

on:
  push:
    paths:
      - 'src/**'
      - 'include/**'
      - 'Makefile'
      - '.github/workflows/build-linux-x86.yml'
  pull_request:
    paths:
      - 'src/**'
      - 'include/**'
      - 'Makefile'
      - '.github/workflows/build-linux-x86.yml'
  workflow_dispatch:

jobs:
  build-Linux:
    runs-on: ubuntu-latest
    env:
      MBEDTLS_VERSION: 3.5.2
      LIBUSB_VERSION: 1.0.27
      READLINE_VERSION: 8.2
      GPM_VERSION: 1.20.7
      LIBIMOBILEDEVICE_COMMIT: ed0d66d0341562731bb19928dfe48155509fa7a7
      LIBIRECOVERY_COMMIT: 7ce02c347b7c26e59498e6af31c9da51018d0fa1
      LIBIMOBILEDEVICE_GLUE_COMMIT: 362f7848ac89b74d9dd113b38b51ecb601f76094
      USBMUXD_COMMIT: bc0b91ca856811f4393318dc83db6dc3c1ac326d
      LIBPLIST_COMMIT: 2117b8fdb6b4096455bd2041a63e59a028120136
      LIBUSBMUXD_COMMIT: a7f0543fb1ecb20ac7121c0fd77297200e0e43fc

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install build dependencies
        run: |
          sudo apt-get remove -y libssl-dev libreadline-dev
          sudo apt-get install -y pkg-config autoconf automake autopoint mandoc
          sudo pip3 install jsonschema jinja2

      - name: Download toolchain
        run: |
          curl -LO https://musl.cc/i486-linux-musl-cross.tgz
          tar -xf i486-linux-musl-cross.tgz

      - name: Setup environment
        run: |
          echo "$(pwd)/i486-linux-musl-cross/bin" >> $GITHUB_PATH
          echo "PKG_CONFIG_PATH=$(pwd)/sysroot/usr/local/lib/pkgconfig" >> $GITHUB_ENV
          echo "CFLAGS=-g -fdata-sections -ffunction-sections -I$(pwd)/sysroot/usr/local/include -L$(pwd)/sysroot/usr/local/lib -D_FILE_OFFSET_BITS=64 -D_TIME_BITS=64" >> $GITHUB_ENV
          echo "CXXFLAGS=-g -fdata-sections -ffunction-sections -I$(pwd)/sysroot/usr/local/include -L$(pwd)/sysroot/usr/local/lib -D_FILE_OFFSET_BITS=64 -D_TIME_BITS=64" >> $GITHUB_ENV
          echo "LDFLAGS=-g -Wl,--gc-sections -fdata-sections -ffunction-sections -I$(pwd)/sysroot/usr/local/include -L$(pwd)/sysroot/usr/local/lib" >> $GITHUB_ENV
          echo "DESTDIR=$(pwd)/sysroot" >> $GITHUB_ENV
          echo "PREFIX=/usr/local" >> $GITHUB_ENV
          echo "CONFIGURE_ARGS=--build=x86_64-linux-gnu --host=i486-linux-musl --prefix=/usr/local --disable-shared --enable-static" >> $GITHUB_ENV
          echo "CROSS_COMPILE=i486-linux-musl-" >> $GITHUB_ENV

      - name: Build dependencies
        run: |
          # Add steps to build mbedtls, libusb, readline, etc.
          # This part is lengthy and depends on your specific needs

      - name: Build palera1n
        run: |
          cp -a ${{ env.DESTDIR }}/${{ env.PREFIX }}/{include,lib} dep_root
          find dep_root -name '*.so' -delete
          find dep_root -name '*.la' -delete
          CC="${{ env.CROSS_COMPILE }}gcc" make -j$(nproc) ROOTFUL=1
          cp src/palera1n palera1n-linux-x86

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: palera1n-linux-x86
          path: palera1n-linux-x86